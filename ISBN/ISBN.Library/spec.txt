The assignment is to code a function/method that can convert a product ID number (which is 12 digits) to a standard ISBN-10 number (which is 10 digits)

If we take the Da Vinci Code as an example, the product ID is 978140007917 and the ISBN after conversion should be 1400079179. The first 3 digits of the product ID (978) are a prefix that is removed. The remaining digits of the product ID (140007917) are the digits of the ISBN excluding the error
control digit. Refer to further below for a description of how an ISBN number is constructed.
Your task is to develop a function that can accept a product ID number and generate the
ISBN-10 number. 

Sample test cases:
Product ID		Expected ISBN
978155192370 		155192370x
978140007917 		1400079179
978037541457 		0375414576
978037428158 		0374281580

The expected result of this test is a function that can be called to change a product ID into an ISBN number.  There is no need to make the program interactive, input to the function can be hardcoded.

Note that in many programming languages, the modulus operator is represented by %

How an ISBN Actually Works

An ISBN is a 10 digit identifier; the first 9 digits represent the identification information, and the final digit is a check-digit to ensure the preceding digits are correct and haven’t been transposed when they’ve been written down or typed into a computer. 

Verifying an ISBN involves calculating the weighted sum of the digits.  That is, the sum of the first digit multiplied by 10, the second digit multiplied by 9, and so on, from left to right.  The check digit is part of the sum, but being the last digit, is multiplied by 1 and added to the sum.

If the sum mod 11 is 0, the ISBN is considered to be correct per the check-digit.  That is, if the sum, divided by 11 has no remainder (sum was evenly divided by 11), then the ISBN is correct.

In the below example, the initial sum was 134.  A check-digit of 9 was calculated so the final sum would be 143, since 143 = 13 x 11, an exact multiple of eleven.

ISBN 		0 	1 	3 	1 	3 	9 	1 	3 	9 	9
multiplier 	x10 	x9 	x8 	x7	x6 	x5 	x4 	x3 	x2 	x1
-- 	-- 	-- 	-- 	-- 	-- 	-- 	-- 	-- 	--
sum 		0 + 	9 + 	24 + 	7 + 	18 + 	45 + 	4 + 	9 + 	18 + 	9 	= 143
143 = 0 mod 11

For an arbitrary ISBN, the check digit might be anywhere between 0 and 10.  For 10, it is represented by an ‘x’ so that the number of characters in the ISBN remains fixed.  As in, the ISBN 155192370x has a check digit that is numerically 10.
